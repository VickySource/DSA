#include <stdio.h>
#include <stdlib.h>
struct node {
int info;
struct node *link;
};
typedef struct node *NODE;
NODE getnode(int item) {
NODE x = (NODE)malloc(sizeof(struct node));
if (x == NULL) {
printf("\nOut of memory");
exit(0);
}
x->info = item;
x->link = NULL;
return x;
}
NODE insert_rear(int item, NODE first) {
NODE temp = getnode(item), cur;
if (first == NULL)
return temp;
cur = first;
while (cur->link != NULL)
cur = cur->link;
cur->link = temp;
return first;
}
NODE delete_item(NODE first, int item) {
NODE prev = NULL, cur = first;
if (first == NULL) {
printf("\nList is empty");
return first;
}
while (cur != NULL && cur->info != item) {
prev = cur;
cur = cur->link;
}
if (cur == NULL) {
printf("\nItem not found");
return first;
}if (prev == NULL) // deleting first node
first = cur->link;
else
prev->link = cur->link;
free(cur);
return first;
}
void display(NODE first) {
NODE temp = first;
if (first == NULL) {
printf("\nList is empty\n");
return;
}
printf("\nList contents: ");
while (temp != NULL) {
printf("%d ", temp->info);
temp = temp->link;
}
printf("\n");
}
int main() {
NODE first = NULL;
int choice, item, n, i;
do {
printf("\n--- MENU ---\n");
printf("1. Create List\n");
printf("2. Delete an Item\n");
printf("3. Display\n");
printf("4. Exit\n");
printf("Enter your choice: ");
scanf("%d", &choice);
switch (choice) {
case 1:
printf("\nEnter number of nodes: ");
scanf("%d", &n);
for (i = 1; i <= n; i++) {
printf("Enter item %d: ", i);
scanf("%d", &item);
first = insert_rear(item, first);
}
break;
case 2:
printf("\nEnter item to delete: ");
scanf("%d", &item);
first = delete_item(first, item);
break;
case 3:
display(first);
break;
}
} while (choice != 4);
return 0;
}
